- name: Ensure promtail group exists
  group:
    name: "{{ promtail_group }}"

- name: Ensure promtail user exists
  user:
    name: "{{ promtail_user }}"
    groups: "{{ promtail_group }}, systemd-journal, sudo"
    shell: /bin/false
    system: yes

- name: Ensure configuration directory exists
  file:
    path: "{{ promtail_config_dir }}"
    state: directory
    owner: "{{ promtail_user }}"
    group: "{{ promtail_group }}"
    mode: '0755'

- name: Download promtail archive
  get_url:
    url: "{{ promtail_download_url }}"
    dest: "/tmp/promtail.zip"
    mode: '0644'

- name: Create /tmp/promtail directory
  ansible.builtin.file:
    path: /tmp/promtaills
    state: directory

- name: Unarchive promtail
  unarchive:
    src: "/tmp/promtail.zip"
    dest: "/tmp/promtail"
    remote_src: yes

- name: Install promtail binary
  copy:
    src: "/tmp/promtail/promtail-{{ promtail_os }}-{{ promtail_arch }}"
    dest: "{{ promtail_install_dir }}/promtail"
    mode: '0755'
    remote_src: yes

- name: Create promtail configuration file
  template:
    src: "promtail.yml.j2"
    dest: "{{ promtail_config_dir }}/{{ promtail_config_file }}"
    owner: "{{ promtail_user }}"
    group: "{{ promtail_group }}"
    mode: '0644'

- name: Create systemd unit file for promtail
  copy:
    dest: /etc/systemd/system/promtail.service
    content: |
      [Unit]
      Description=Promtail service
      After=network.target
      
      [Service]
      User={{ promtail_user }}
      Group={{ promtail_group }}
      Type=simple
      ExecStart={{ promtail_install_dir }}/promtail --config.file={{ promtail_config_dir }}/{{ promtail_config_file }}
      Restart=on-failure
      
      [Install]
      WantedBy=multi-user.target

  notify:
    - restart promtail

- name: Ensure promtail state directory exists
  file:
    path: /var/lib/promtail
    state: directory
    owner: "{{ promtail_user }}"
    group: "{{ promtail_group }}"
    mode: '0755'